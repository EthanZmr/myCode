/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.91
 * Generated at: 2018-12-21 14:47:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class xml_005fajax_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<script type=\"text/javascript\">\n");
      out.write("\twindow.onload = function(){ //文档加载完毕后执行\n");
      out.write("\t\tvar btn = document.getElementById(\"btn\");\n");
      out.write("\t\t\n");
      out.write("\t\t\n");
      out.write("\t\tbtn.onclick = function(){\n");
      out.write("\t\t\t\n");
      out.write("\t\t\tvar xmlHttp = createXmlHttpRequest();\n");
      out.write("\t\t\t\n");
      out.write("\t\t\txmlHttp.open(\"GET\",\"/ajax/XMLServlet\",true);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\txmlHttp.send(null);\n");
      out.write("\t\t\t\n");
      out.write("\t\t\txmlHttp.onreadystatechange = function(){\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t\tif(xmlHttp.readyState == 4 && xmlHttp.status == 200){\n");
      out.write("\t\t\t\t\tconsole.log(xmlHttp.readyState)\n");
      out.write("\t\t\t\t\tconsole.log(xmlHttp.status);\n");
      out.write("\t\t\t\t\t//获取服务器响应结果（document）\n");
      out.write("\t\t\t\t\tvar doc = xmlHttp.responseXML;\n");
      out.write("\t\t\t\t\tconsole.log(doc);\n");
      out.write("\t\t\t\t\tvar eleArr = doc.getElementsByTagName(\"student\")[0];\n");
      out.write("\t\t\t\t\tvar number = eleArr.getAttribute(\"number\");\n");
      out.write("\t\t\t\t\tvar name = eleArr.getElementsByTagName(\"name\")[0].textContent;\n");
      out.write("\t\t\t\t\t\n");
      out.write("\t\t\t\t\tvar text = number + \",\" + name;\n");
      out.write("\t\t\t\t\tdocument.getElementById(\"h1\").innerHTML = text;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t};\n");
      out.write("\t};\n");
      out.write("\t\n");
      out.write("\tfunction createXmlHttpRequest(){\n");
      out.write("\t\ttry {\n");
      out.write("\t\t\treturn new XMLHttpRequest();\n");
      out.write("\t\t} catch (e) {\n");
      out.write("\t\t\ttry {\n");
      out.write("\t\t\t\treturn new ActiveXObject(\"Msxml2.XMLHTTP\");\n");
      out.write("\t\t\t} catch (e) {\n");
      out.write("\t\t\t\ttry {\n");
      out.write("\t\t\t\t\treturn new ActiveXObject(\"Microsoft.XMLHTTP\");\n");
      out.write("\t\t\t\t} catch (e) {\n");
      out.write("\t\t\t\t\tthrow e;\n");
      out.write("\t\t\t\t}\n");
      out.write("\t\t\t}\n");
      out.write("\t\t}\n");
      out.write("\t}\n");
      out.write("</script>\n");
      out.write("<body>\n");
      out.write("\t<button id=\"btn\">点这里</button>\n");
      out.write("\t\n");
      out.write("\t<h1 id=h1></h1>\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
