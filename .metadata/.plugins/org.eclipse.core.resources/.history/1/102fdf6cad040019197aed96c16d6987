package com.ethan.email;

import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMessage.RecipientType;

import org.junit.Test;

public class MailDemo {
	@Test
	public void fun1() throws AddressException, MessagingException {
		/*
		 * 1.得到Session
		 */
		Properties props = new Properties();
		props.setProperty("mail.host", "smtp.163.com");
		props.setProperty("mail.smtp.auth", "true");
		
		Authenticator auth = new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication("","");
			}
		};
		
		Session session = Session.getInstance(props, auth);
		/*
		 * 2.创建MimeMessage
		 */
		MimeMessage msg = new MimeMessage(session);
		/*
		 * 设置发件人
		 */
		msg.setFrom(new InternetAddress("发件人"));
		/*
		 * 设置收件人
		 */
		msg.setRecipients(RecipientType.TO, "收件人");
		/*
		 * 设置抄送
		 */
		msg.setRecipients(RecipientType.CC, "");
		
		msg.setSubject("测试邮件");
		msg.setContent("这就是垃圾邮件","text/html;charset=utf-8");
		/*
		 * 3.发送邮件
		 */
		Transport.send(msg);
	}
	
	@Test
	public void fun2() throws AddressException, MessagingException {
		/*
		 * 1.得到Session
		 */
		Properties props = new Properties();
		props.setProperty("mail.host", "smtp.163.com");
		props.setProperty("mail.smtp.auth", "true");
		
		Authenticator auth = new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication("","");
			}
		};
		
		Session session = Session.getInstance(props, auth);
		/*
		 * 2.创建MimeMessage
		 */
		MimeMessage msg = new MimeMessage(session);
		/*
		 * 设置发件人
		 */
		msg.setFrom(new InternetAddress("发件人"));
		/*
		 * 设置收件人
		 */
		msg.setRecipients(RecipientType.TO, "收件人");
		
		
		msg.setSubject("测试邮件 ---- 带附件");
		
		/*
		 * 当发送包含附件的邮件时，邮件体久违多部件形式
		 * 1.创建一个多部件的邮件内容！ MimeMultipart
		 * MimeMultipart就是一个集合，用来装载多个主题部件
		 */
		
		msg.setContent("这就是垃圾邮件","text/html;charset=utf-8");
		/*
		 * 3.发送邮件
		 */
		Transport.send(msg);
	}
}
