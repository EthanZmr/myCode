package com.ethan.email;

import java.io.File;
import java.io.IOException;
import java.util.Properties;

import javax.mail.Authenticator;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.AddressException;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMessage.RecipientType;
import javax.mail.internet.MimeMultipart;

import org.junit.Test;

import com.sun.xml.internal.messaging.saaj.packaging.mime.internet.MimeUtility;

import cn.itcast.mail.Mail;
import cn.itcast.mail.MailUtils;

public class MailDemo {
	@Test
	public void fun1() throws AddressException, MessagingException {
		/*
		 * 1.得到Session
		 */
		Properties props = new Properties();
		props.setProperty("mail.host", "smtp.163.com");
		props.setProperty("mail.smtp.auth", "true");
		
		Authenticator auth = new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication("","");
			}
		};
		
		Session session = Session.getInstance(props, auth);
		/*
		 * 2.创建MimeMessage
		 */
		MimeMessage msg = new MimeMessage(session);
		/*
		 * 设置发件人
		 */
		msg.setFrom(new InternetAddress("发件人"));
		/*
		 * 设置收件人
		 */
		msg.setRecipients(RecipientType.TO, "收件人");
		/*
		 * 设置抄送
		 */
		msg.setRecipients(RecipientType.CC, "");
		
		msg.setSubject("测试邮件");
		msg.setContent("这就是垃圾邮件","text/html;charset=utf-8");
		/*
		 * 3.发送邮件
		 */
		Transport.send(msg);
	}
	
	
	/**
	 * 带附件的发邮件
	 * @throws AddressException
	 * @throws MessagingException
	 * @throws IOException 
	 */
	@Test
	public void fun2() throws AddressException, MessagingException, IOException {
		/*
		 * 1.得到Session
		 */
		Properties props = new Properties();
		props.setProperty("mail.host", "smtp.163.com");
		props.setProperty("mail.smtp.auth", "true");
		
		Authenticator auth = new Authenticator() {
			@Override
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication("","");
			}
		};
		
		Session session = Session.getInstance(props, auth);
		/*
		 * 2.创建MimeMessage
		 */
		MimeMessage msg = new MimeMessage(session);
		/*
		 * 设置发件人
		 */
		msg.setFrom(new InternetAddress("发件人"));
		/*
		 * 设置收件人
		 */
		msg.setRecipients(RecipientType.TO, "收件人");
		
		
		msg.setSubject("测试邮件 ---- 带附件");
		
		/*
		 * 当发送包含附件的邮件时，邮件体久违多部件形式
		 * 1.创建一个多部件的邮件内容！ MimeMultipart
		 * MimeMultipart就是一个集合，用来装载多个主题部件
		 * 2.需要创建两个主题部件，一个是文本内容的，另一个是附件的
		 * 	主体部件叫MimeBodyPart
		 * 3.把MimeMultipart设置给MimeMessage的内容
		 */
		
		/*
		 * 创建多部分主体
		 */
		MimeMultipart list = new MimeMultipart();
		
		/*
		 * 创建MimeBodyPart
		 */
		MimeBodyPart mbp = new MimeBodyPart();
		mbp.setContent("这是一封包含附件的垃圾邮件","text/html;charset=utf-8");
		/*
		 * 把主体部件添加到集合中
		 */
		list.addBodyPart(mbp);
		
		MimeBodyPart mbp2 = new MimeBodyPart();
		mbp2.attachFile(new File("/Users/ethan/Documents/demo/面试题.pages"));
		
		/*
		 * 设置显示的文件名称，并处理中文乱码问题
		 */
		mbp2.setFileName(MimeUtility.encodeText("假面试题.pages"));
		
		list.addBodyPart(mbp2);
		
		/*
		 * 设置给邮件，作为邮件的内容
		 */
		msg.setContent(list);
		
		
		
		
		msg.setContent("这就是垃圾邮件","text/html;charset=utf-8");
		/*
		 * 3.发送邮件
		 */
		Transport.send(msg);
	}
	
	@Test
	public void fun3() {
		/*
		 * 得到Session
		 */
		Session session = MailUtils.createSession("smtp.163.com", "用户名", "密码");
		
		Mail mail = new Mail("发件人","收件人"，,"邮件正文", "这里是正文");
		
	}
}
