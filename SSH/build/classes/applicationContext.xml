<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"        
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"              
    xsi:schemaLocation="                                               
            http://www.springframework.org/schema/beans    
            http://www.springframework.org/schema/beans/spring-beans.xsd    
            http://www.springframework.org/schema/context     
            http://www.springframework.org/schema/context/spring-context.xsd     
            http://www.springframework.org/schema/tx   
            http://www.springframework.org/schema/tx/spring-tx.xsd  
            http://www.springframework.org/schema/aop  
            http://www.springframework.org/schema/aop/spring-aop.xsd " >
            
            <!-- 配置c3p0连接池 -->
            <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            	<property name="driverClass" value="com.mysql.jdbc.Driver"></property>
            	<property name="jdbcUrl" value="jdbc:mysql:///test?characterEncoding=UTF-8"></property>
            	<property name="user" value="root"></property>
            	<property name="password" value="12345678"></property>
            </bean>
            
            <!-- 配置action的对象创建 -->
            <bean id="userAction" class="cn.ethan.action.UserAction" scope="prototype">
            	<!-- 注入service -->
            	<property name="userService" ref="userService"></property>
            </bean>
            
            <!-- 创建service -->
            <bean id="userService" class="cn.ethan.service.UserService">
            	<property name="userDao" ref="userDaoImpl"></property>
            </bean>
            
            <!-- 创建dao实现类对象 -->
            <bean id="userDaoImpl" class="cn.ethan.dao.impl.UserDaoImpl">
            	<property name="hibernateTemplate" ref="hibernateTemplate"></property>
            </bean>
            
            <!-- 创建hibernateTemplate对象 -->
            <bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">
            	<!-- 注入sessionFactory -->
            	<property name="sessionFactory" ref="sessionFactory"></property>
            </bean>
            
            <!-- sessionFactory对象的创建交给spring进行管理 -->
            <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
            	<!-- 因为hibernate核心配置文件中的数据库配置转移到spring配置文件中，需要注入数据库配置 -->
            	<property name="dataSource" ref="dataSource"></property>
            	<!-- 指定使用的hibernate核心配置文件 -->
            	<property name="configLocations" value="classpath:hibernate.cfg.xml"></property>
            </bean>
            
            
            
            <!-- 配置事务管理器 -->
            <bean id="transactionManager" class="org.springframework.orm.hibernate5.HibernateTransactionManager">
            	<property name="sessionFactory" ref="sessionFactory"></property>
            </bean>
            
            <!-- 配置事务的增强 -->
            <tx:advice id="txAdvice" transaction-manager="transactionManager">
            	<tx:attributes>
            		<tx:method name="add"/>
            	</tx:attributes>
            </tx:advice>
            
            <!-- 配置切面 -->
             <aop:config>
            	<aop:pointcut expression="execution(* cn.ethan.service.UserService.*(..))" id="userPointCut"/>
            	<aop:advisor advice-ref="txAdvice" pointcut-ref="userPointCut"/>
            </aop:config>
</beans>